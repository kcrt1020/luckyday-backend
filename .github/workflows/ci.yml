name: CI Pipeline (Docker 연동)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: luckyday_db
          MYSQL_USER: luckydaydb
          MYSQL_PASSWORD: luckydaydb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        extra_hosts:
          - "db:127.0.0.1"

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle 실행 권한 추가  # ✅ 실행 권한 추가
        run: chmod +x ./gradlew

      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}

      - name: Gradle 빌드 & 테스트
        run: ./gradlew build --no-daemon

      # ✅ Docker 빌드 추가
      - name: Docker 이미지 빌드
        run: docker build -t luckyday-test -f Dockerfile.test .

      # ✅ Docker 컨테이너 실행 후 테스트 & 삭제
      - name: Docker 컨테이너에서 테스트 실행
        run: docker run --rm luckyday-test ./gradlew test
